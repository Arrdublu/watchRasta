
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(resource) {
      return request.auth.uid == resource.data.authorId;
    }

    function isAdmin() {
      return request.auth.token.email == 'watchrasta@gmail.com';
    }

    // Collections can be read by anyone but only written to by admins
    match /collections/{collectionId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Products can be read by anyone if published.
    // Users can create products and manage their own drafts.
    match /products/{productId} {
      allow read: if true;
      allow create: if isAuth();
      allow update, delete: if isAuth() && isOwner(resource) && resource.data.status != 'Published';
    }

    // Articles can be read if published.
    // Users can create articles and manage their own non-published articles.
    match /articles/{articleId} {
      allow read: if true;
      allow create: if isAuth();
      allow update, delete: if isAuth() && isOwner(resource) && resource.data.status != 'Published';
    }

    // Versions subcollection for articles. Only owners can write.
    match /articles/{articleId}/versions/{versionId} {
        allow read, write: if isAuth() && isOwner(get(/databases/$(database)/documents/articles/$(articleId)));
    }

    // Comments can be read by anyone.
    // Authenticated users can create comments. No editing/deleting for now.
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isAuth();
    }
  }
}
